# -*- coding: utf-8 -*-
"""KODO_millets.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Rzy3NTgpf29UMvSo5pehWs-ZIv6aqvZc
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import matplotlib.pyplot as plt

import tensorflow as tf

from sklearn.linear_model import LinearRegression
from sklearn.svm import SVR
from sklearn.ensemble import RandomForestRegressor, GradientBoostingRegressor

from sklearn.metrics import mean_squared_error
from sklearn.metrics import mean_squared_error, r2_score

from sklearn.metrics import accuracy_score

import matplotlib.pyplot as plt

kodo = pd.read_excel(r"kodo_millet_jk-41 (1).xls")
kodo.head()

kodo = kodo.iloc[2:]
kodo.head()

kodo = kodo.iloc[1:]
kodo.head()

print(kodo.head())  # Print the first few rows of the DataFrame
print(kodo.columns)  # Print the column names of the DataFrame

kodo = pd.read_excel(r"kodo_millet_jk-41 (1).xls")
kodo.head()

kodo = kodo.iloc[1:]
kodo.head()

kodo.head()

new_headers = ['wavelength','Kodo_millet_jk-4_1', 'Kodo_millet_jk-41_2', 'Kodo_millet_jk-41_3','Kodo_millet_jk-41_4','Kodo_millet_jk-41_5','Kodo_millet_jk-41_6','Kodo_millet_jk-41_7','Kodo_millet_jk-41_8','Kodo_millet_jk-41_9','Kodo_millet_jk-41_10','Kodo_millet_jk-41_11','Kodo_millet_jk-41_12','Kodo_millet_jk-41_13','Kodo_millet_jk-41_14','Kodo_millet_jk-41_15']  # Replace with your desired column names
kodo.columns = new_headers

# Step 3: Display the DataFrame to verify the new headers



kodo.head()

plt.plot(kodo['wavelength'],kodo['Kodo_millet_jk-4_1'])

#add labels
plt.xlabel('wavelength (nm)')
plt.ylabel('Reflectance')
plt.title('Spectra')

plt.show()

kodo.head()

plt.plot(kodo['wavelength'],kodo['Kodo_millet_jk-4_1'])
plt.xlim(900,1700)
plt.ylim(0,0.6)

#add labels
plt.xlabel('wavelength (nm)')
plt.ylabel('Reflectance')
plt.title('Spectra')

plt.show()

finger = pd.read_excel(r"Finger_Millet (1).xls")
finger.head()

new_headers = ['wavelength','Millet_1','Millet_2','Millet_3','Millet_4','Millet_5','Millet_6','Millet_7','Millet_8','Millet_9','Millet_10','Millet_11','Millet_12','Millet_13','Millet_14','Millet_15']  # Replace with your desired column names
finger.columns = new_headers

# Step 3: Display the DataFrame to verify the new headers



finger.head()

finger = finger.iloc[1:]
finger.head()

plt.plot(finger['wavelength'],finger['Millet_1'])

#add labels
plt.xlabel('wavelength (nm)')
plt.ylabel('Reflectance')
plt.title('Spectra')

plt.show()

plt.plot(finger['wavelength'],finger['Millet_1'])
plt.xlim(900,1700)
plt.ylim(0,0.8)

#add labels
plt.xlabel('wavelength (nm)')
plt.ylabel('Reflectance')
plt.title('Spectra')

plt.show()

import pandas as pd

df1 = pd.read_excel("kodo_millet_jk-41 (1).xls")
df2 = pd.read_excel("Finger_Millet (1).xls")

df1.head()
df2.head()

import matplotlib.pyplot as plt

fig, ax = plt.subplots()

# Plot the first dataset
ax.plot(kodo['wavelength'], kodo['Kodo_millet_jk-4_1'], label="kodo")

# Overlay the second dataset
ax.plot(finger['wavelength'], finger['Millet_1'], label="finger")

# Customize labels, titles, etc.
plt.xlabel('wavelength (nm)')
plt.ylabel('Reflectance')
plt.title("merged Graph of Two Datasets")
plt.legend()

# Show or save the plot
plt.show()

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import matplotlib.pyplot as plt

import tensorflow as tf

from sklearn.linear_model import LinearRegression
from sklearn.svm import SVR
from sklearn.ensemble import RandomForestRegressor, GradientBoostingRegressor
from sklearn.metrics import mean_squared_error
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.metrics import accuracy_score
import matplotlib.pyplot as plt

barnyard = pd.read_excel(r"Barnyard.xlsx")
barnyard.head()

new_headers = ['wavelength','Barnyard_millet_I_a','Barnyard_millet_I_b','Barnyard_millet_I_c','Barnyard_millet_I_d','Barnyard_millet_I_e','Barnyard_millet_II_a','Barnyard_millet_II_b','Barnyard_millet_II_c','Barnyard_millet_II_d','Barnyard_millet_II_e','Barnyard_millet_III_a','Barnyard_millet_III_b','Barnyard_millet_III_c','Barnyard_millet_III_d','Barnyard_millet_III_e']  # Replace with your desired column names
barnyard.columns = new_headers

# Step 3: Display the DataFrame to verify the new headers



barnyard.head()

barnyard = barnyard.iloc[1:]
barnyard.head()

plt.plot(barnyard['wavelength'],barnyard['Barnyard_millet_I_a'])

#add labels
plt.xlabel('wavelength (nm)')
plt.ylabel('Reflectance')
plt.title('Spectra')

plt.show()

plt.plot(barnyard['wavelength'],barnyard['Barnyard_millet_I_a'])
plt.xlim(900,1700)
plt.ylim(0,0.6)

#add labels
plt.xlabel('wavelength (nm)')
plt.ylabel('Reflectance')
plt.title('Spectra')

plt.show()

import matplotlib.pyplot as plt

fig, ax = plt.subplots()

# Plot the first dataset
ax.plot(kodo['wavelength'], kodo['Kodo_millet_jk-4_1'], label="kodo")

# Overlay the second dataset
ax.plot(finger['wavelength'], finger['Millet_1'], label="finger")

# Overlay the third dataset
ax.plot(barnyard['wavelength'],barnyard['Barnyard_millet_I_a'], label="barnyard")

# Customize labels, titles, etc.
plt.xlabel('wavelength (nm)')
plt.ylabel('Reflectance')
plt.title("Spectra Graph of Three Datasets")
plt.legend()

# Show or save the plot
plt.show()

browntop = pd.read_excel(r"Browntop.xls")
browntop.head()

new_headers = ['wavelength','Browntop_millet_I_a','Browntop_millet_I_b','Browntop_millet_I_c','Browntop_millet_I_d','Browntop_millet_I_e','Browntop_millet_II_a','Browntop_millet_II_b','Browntop_millet_II_c','Browntop_millet_II_d','Browntop_millet_II_e','Browntop_millet_III_a','Browntop_millet_III_b','Browntop_millet_III_c','Browntop_millet_III_d','Browntop_millet_III_e']  # Replace with your desired column names
browntop.columns = new_headers

# Step 3: Display the DataFrame to verify the new headers



browntop.head()

browntop= browntop.iloc[1:]
browntop.head()

plt.plot(browntop['wavelength'],browntop['Browntop_millet_I_a'])

#add labels
plt.xlabel('wavelength (nm)')
plt.ylabel('Reflectance')
plt.title('Spectra')

plt.show()

plt.plot(barnyard['wavelength'],barnyard['Barnyard_millet_I_a'])
plt.xlim(900,1700)
plt.ylim(0,0.6)

#add labels
plt.xlabel('wavelength (nm)')
plt.ylabel('Reflectance')
plt.title('Spectra')

plt.show()

import matplotlib.pyplot as plt

fig, ax = plt.subplots()

# Plot the first dataset
ax.plot(kodo['wavelength'], kodo['Kodo_millet_jk-4_1'], label="kodo")

# Overlay the second dataset
ax.plot(finger['wavelength'], finger['Millet_1'], label="finger")

# Overlay the third dataset
ax.plot(barnyard['wavelength'], barnyard['Barnyard_millet_I_a'], label="barnyard")

# Overlay the third dataset
ax.plot(browntop['wavelength'], browntop['Browntop_millet_I_a'], label="browntop")

# Customize labels, titles, etc.
plt.xlabel('wavelength (nm)')
plt.ylabel('Reflectance')
plt.title("Spectra Graph of four Datasets")
plt.legend()

# Show or save the plot
plt.show()

littleMillet = pd.read_excel(r"Little Millet DHLM-36-3 (1).xls")
littleMillet.head()

littleMillet=littleMillet.iloc[1:]
littleMillet.head()

new_headers = ['wavelength','Little MilletDHLM-36-3_1','Little MilletDHLM-36-3_2','Little MilletDHLM-36-3_3','Little MilletDHLM-36-3_4','Little MilletDHLM-36-3_5','Little MilletDHLM-36-3_6','Little MilletDHLM-36-3_7','Little MilletDHLM-36-3_8','Little MilletDHLM-36-3_9','Little MilletDHLM-36-3_10','Little MilletDHLM-36-3_11','Little MilletDHLM-36-3_12','Little MilletDHLM-36-3_13','Little MilletDHLM-36-3_14','Little MilletDHLM-36-3_15']  # Replace with your desired column names
littleMillet.columns = new_headers

# Step 3: Display the DataFrame to verify the new headers

littleMillet.head()

plt.plot(littleMillet['wavelength'],littleMillet['Little MilletDHLM-36-3_1'])

#add labels
plt.xlabel('wavelength (nm)')
plt.ylabel('Reflectance')
plt.title('Spectra')

plt.show()

plt.plot(littleMillet['wavelength'],littleMillet['Little MilletDHLM-36-3_1'])
plt.xlim(900,1700)
plt.ylim(0,0.6)

#add labels
plt.xlabel('wavelength (nm)')
plt.ylabel('Reflectance')
plt.title('Spectra')

plt.show()

import matplotlib.pyplot as plt

fig, ax = plt.subplots()

# Plot the first dataset
ax.plot(kodo['wavelength'], kodo['Kodo_millet_jk-4_1'], label="kodo")

# Overlay the second dataset
ax.plot(finger['wavelength'], finger['Millet_1'], label="finger")

# Overlay the third dataset
ax.plot(barnyard['wavelength'], barnyard['Barnyard_millet_I_a'], label="barnyard")

# Overlay the fourth dataset
ax.plot(browntop['wavelength'], browntop['Browntop_millet_I_a'], label="browntop")

# Overlay the fifth dataset
ax.plot(littleMillet['wavelength'], littleMillet['Little MilletDHLM-36-3_1'], label="littleMillet")

# Customize labels, titles, etc.
plt.xlabel('wavelength (nm)')
plt.ylabel('Reflectance')
plt.title("Spectra Graph of Five Datasets")
plt.legend()

# Show or save the plot
plt.show()

rari = pd.read_excel(r"millets_RARI.xls")
rari.head()

rari=rari.iloc[1:]
rari.head()

new_headers = ['wavelength','RHB_234_1','RHB_234_','RHB_234_3','RHB_234_4','RHB_234_5','RHB_234_6','RHB_234_7','RHB_234_8','RHB_234_9','RHB_234_10','RHB_234_11','RHB_234_12','RHB_234_13','RHB_234_14','RHB_234_15','RHB_223_1','RHB_223_2','RHB_223_3','RHB_223_4','RHB_223_5','RHB_223_6','RHB_223_7','RHB_223_8','RHB_223_9','RHB_223_10','RHB_223_11','RHB_223_12','RHB_223_13','RHB_223_14','RHB_223_15','RHB_233_1','RHB_233_2','RHB_233_3','RHB_233_4','RHB_233_5','RHB_233_6','RHB_233_7','RHB_233_8','RHB_233_9','RHB_233_10','RHB_233_11','RHB_233_12','RHB_233_13','RHB_233_14','RHB_233_15']  # Replace with your desired column names
rari.columns = new_headers

# Step 3: Display the DataFrame to verify the new headers

rari.head()

plt.plot(rari['wavelength'],rari['RHB_234_1'])

#add labels
plt.xlabel('wavelength (nm)')
plt.ylabel('Reflectance')
plt.title('Spectra')

plt.show()

plt.plot(rari['wavelength'],rari['RHB_234_1'])
plt.xlim(900,1700)
plt.ylim(0,0.6)

#add labels
plt.xlabel('wavelength (nm)')
plt.ylabel('Reflectance')
plt.title('Spectra')

plt.show()

import matplotlib.pyplot as plt

fig, ax = plt.subplots()

# Plot the first dataset
ax.plot(kodo['wavelength'], kodo['Kodo_millet_jk-4_1'], label="kodo")

# Overlay the second dataset
ax.plot(finger['wavelength'], finger['Millet_1'], label="finger")

# Overlay the third dataset
ax.plot(barnyard['wavelength'], barnyard['Barnyard_millet_I_a'], label="barnyard")

# Overlay the fourth dataset
ax.plot(browntop['wavelength'], browntop['Browntop_millet_I_a'], label="browntop")

# Overlay the fifth dataset
ax.plot(littleMillet['wavelength'], littleMillet['Little MilletDHLM-36-3_1'], label="littleMillet")

# Overlay the sixth dataset
ax.plot(rari['wavelength'], rari['RHB_234_1'], label="rari")

# Customize labels, titles, etc.
plt.xlabel('wavelength (nm)')
plt.ylabel('Reflectance')
plt.title("Spectra Graph of Six Datasets")
plt.legend()

# Show or save the plot
plt.show()

pearl = pd.read_excel(r"Pearl MilletPusa1801 (1).xls")
pearl.head()

pearl=pearl.iloc[1:]
pearl.head()

new_headers = ['wavelength','Pearl MilletPusa 1801_1','Pearl MilletPusa 1801_2','Pearl MilletPusa 1801_3','Pearl MilletPusa 1801_4','Pearl MilletPusa 1801_5','Pearl MilletPusa 1801_6','Pearl MilletPusa 1801_7','Pearl MilletPusa 1801_8','Pearl MilletPusa 1801_9','Pearl MilletPusa 1801_10','Pearl MilletPusa 1801_11','Pearl MilletPusa 1801_12','Pearl MilletPusa 1801_13','Pearl MilletPusa 1801_14','Pearl MilletPusa 1801_15']  # Replace with your desired column names
pearl.columns = new_headers

# Step 3: Display the DataFrame to verify the new headers

pearl.head()

plt.plot(pearl['wavelength'],pearl['Pearl MilletPusa 1801_1'])

#add labels
plt.xlabel('wavelength (nm)')
plt.ylabel('Reflectance')
plt.title('Spectra')

plt.show()

plt.plot(pearl['wavelength'],pearl['Pearl MilletPusa 1801_1'])
plt.xlim(900,1700)
plt.ylim(0,0.6)

#add labels
plt.xlabel('wavelength (nm)')
plt.ylabel('Reflectance')
plt.title('Spectra')

plt.show()

import matplotlib.pyplot as plt

fig, ax = plt.subplots()

# Plot the first dataset
ax.plot(kodo['wavelength'], kodo['Kodo_millet_jk-4_1'], label="kodo")

# Overlay the second dataset
ax.plot(finger['wavelength'], finger['Millet_1'], label="finger")

# Overlay the third dataset
ax.plot(barnyard['wavelength'], barnyard['Barnyard_millet_I_a'], label="barnyard")

# Overlay the fourth dataset
ax.plot(browntop['wavelength'], browntop['Browntop_millet_I_a'], label="browntop")

# Overlay the fifth dataset
ax.plot(littleMillet['wavelength'], littleMillet['Little MilletDHLM-36-3_1'], label="littleMillet")

# Overlay the sixth dataset
ax.plot(rari['wavelength'], rari['RHB_234_1'], label="rari")

# Overlay the seventh dataset
ax.plot(pearl['wavelength'], pearl['Pearl MilletPusa 1801_1'], label="pearl")

# Customize labels, titles, etc.
plt.xlabel('wavelength (nm)')
plt.ylabel('Reflectance')
plt.title("Spectra Graph of Seven Datasets")
plt.legend()

# Show or save the plot
plt.show()

porso = pd.read_excel(r"Porso-Millet_tnau (2).xls")
porso.head()

porso=porso.iloc[1:]
porso.head()

new_headers = ['wavelength','Porso Mllet TANU-145_1','Porso Mllet TANU-145_2','Porso Mllet TANU-145_3','Porso Mllet TANU-145_4','Porso Mllet TANU-145_5','Porso Mllet TANU-145_6','Porso Mllet TANU-145_7','Porso Mllet TANU-145_8','Porso Mllet TANU-145_9','Porso Mllet TANU-145_10','Porso Mllet TANU-145_11','Porso Mllet TANU-145_12','Porso Mllet TANU-145_13','Porso Mllet TANU-145_14','Porso Mllet TANU-145_15']  # Replace with your desired column names
porso.columns = new_headers

# Step 3: Display the DataFrame to verify the new headers

porso.head()

plt.plot(porso['wavelength'],porso['Porso Mllet TANU-145_1'])

#add labels
plt.xlabel('wavelength (nm)')
plt.ylabel('Reflectance')
plt.title('Spectra')

plt.show()

plt.plot(porso['wavelength'],porso['Porso Mllet TANU-145_1'])
plt.xlim(900,1700)
plt.ylim(0,0.6)

#add labels
plt.xlabel('wavelength (nm)')
plt.ylabel('Reflectance')
plt.title('Spectra')

plt.show()

import matplotlib.pyplot as plt

fig, ax = plt.subplots()

# Plot the first dataset
ax.plot(kodo['wavelength'], kodo['Kodo_millet_jk-4_1'], label="kodo")

# Overlay the second dataset
ax.plot(finger['wavelength'], finger['Millet_1'], label="finger")

# Overlay the third dataset
ax.plot(barnyard['wavelength'], barnyard['Barnyard_millet_I_a'], label="barnyard")

# Overlay the fourth dataset
ax.plot(browntop['wavelength'], browntop['Browntop_millet_I_a'], label="browntop")

# Overlay the fifth dataset
ax.plot(littleMillet['wavelength'], littleMillet['Little MilletDHLM-36-3_1'], label="littleMillet")

# Overlay the sixth dataset
ax.plot(rari['wavelength'], rari['RHB_234_1'], label="rari")

# Overlay the seventh dataset
ax.plot(pearl['wavelength'], pearl['Pearl MilletPusa 1801_1'], label="pearl")

# Overlay the seventh dataset
ax.plot(porso['wavelength'], porso['Porso Mllet TANU-145_1'], label="porso")

# Customize labels, titles, etc.
plt.xlabel('wavelength (nm)')
plt.ylabel('Reflectance')
plt.title("Spectra Graph of Seven Datasets")
plt.legend()

# Show or save the plot
plt.show()